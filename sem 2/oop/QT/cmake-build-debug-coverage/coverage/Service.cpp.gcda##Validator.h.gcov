        -:    0:Source:C:/Users/Ale/Desktop/QT/Validator.h
        -:    0:Graph:C:\Users\Ale\Desktop\QT\cmake-build-debug-coverage\CMakeFiles\QT.dir\Service.cpp.gcno
        -:    0:Data:C:\Users\Ale\Desktop\QT\cmake-build-debug-coverage\CMakeFiles\QT.dir\Service.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by Ale on 05/16/2024.
        -:    3://
        -:    4:
        -:    5:#ifndef QT_VALIDATOR_H
        -:    6:#define QT_VALIDATOR_H
        -:    7:#include <string>
        -:    8:using namespace std;
        -:    9:
        -:   10:class Exception{
        -:   11:private:
        -:   12:    string msg;
        -:   13:public:
function _ZN9ExceptionC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 100%
        1:   14:    Exception(string m) : msg{m} {};
        1:   14-block  0
call    0 returned 1
        -:   15:    string getMessage() {
        -:   16:        return this->msg;
        -:   17:    }
        -:   18:};
        -:   19:
        -:   20:class Validator{
        -:   21:public:
        -:   22:    Validator(const Validator&o) = delete;
        -:   23:    Validator() =default;
function _ZN9Validator12valid_stringERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 84 returned 100% blocks executed 96%
       84:   24:    bool valid_string(string& str) {
      84*:   25:        if(str.size() == 0) return false;
       84:   25-block  0
call    0 returned 84
branch  1 taken 0 (fallthrough)
branch  2 taken 84
    %%%%%:   25-block  1
      174:   26:        for( int i = 0; i <str.size(); i++) {
       84:   26-block  0
       90:   26-block  1
      174:   26-block  2
call    0 returned 174
branch  1 taken 91
branch  2 taken 83 (fallthrough)
       91:   27:            if(!(str.at(i) >= 'a' && str.at(i) <= 'z') || (str.at(i) >= 'A' && str.at(i) <= 'Z') || str.at(i) == ' ') return false;
       91:   27-block  0
call    0 returned 91
branch  1 taken 90 (fallthrough)
branch  2 taken 1
       90:   27-block  1
call    3 returned 90
branch  4 taken 90 (fallthrough)
branch  5 taken 0
       90:   27-block  2
call    6 returned 90
branch  7 taken 90 (fallthrough)
branch  8 taken 0
       90:   27-block  3
call    9 returned 90
branch 10 taken 90 (fallthrough)
branch 11 taken 0
       90:   27-block  4
call   12 returned 90
branch 13 taken 0 (fallthrough)
branch 14 taken 90
        1:   27-block  5
       90:   27-block  6
       91:   27-block  7
branch 15 taken 1 (fallthrough)
branch 16 taken 90
        1:   27-block  8
        -:   28:        }
       83:   29:        return true;
       83:   29-block  0
        -:   30:    }
        -:   31:
function _ZN9Validator16validateActivityENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_S5_i called 28 returned 96% blocks executed 72%
       28:   32:    void validateActivity(std::string name, std::string description, std::string type, int time) {
       28:   33:        string err;
       28:   33-block  0
call    0 returned 28
        -:   34:
       28:   35:        if(!valid_string(name)) err.append("Invalid name\n");
call    0 returned 28
branch  1 taken 28 (fallthrough)
branch  2 taken 0 (throw)
       28:   35-block  0
branch  3 taken 1 (fallthrough)
branch  4 taken 27
        1:   35-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
      28*:   36:        if(!valid_string(description)) err.append("Invalid description\n");
       28:   36-block  0
call    0 returned 28
branch  1 taken 28 (fallthrough)
branch  2 taken 0 (throw)
       28:   36-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 28
    %%%%%:   36-block  2
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
      28*:   37:        if(!valid_string(type)) err.append("Invalid type\n");
       28:   37-block  0
call    0 returned 28
branch  1 taken 28 (fallthrough)
branch  2 taken 0 (throw)
       28:   37-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 28
    %%%%%:   37-block  2
call    5 never executed
branch  6 never executed (fallthrough)
branch  7 never executed (throw)
      28*:   38:        if(time <= 0) err.append("Invalid time\n");
       28:   38-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 28
    %%%%%:   38-block  1
call    2 never executed
branch  3 never executed (fallthrough)
branch  4 never executed (throw)
       28:   39:        if( err.size() != 0) throw Exception(err);
       28:   39-block  0
call    0 returned 28
branch  1 taken 1 (fallthrough)
branch  2 taken 27
        1:   39-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   39-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:   39-block  3
call   10 returned 1
call   11 returned 1
    $$$$$:   39-block  4
call   12 never executed
    $$$$$:   39-block  5
    $$$$$:   39-block  6
call   13 never executed
       28:   40:    }
       27:   40-block  0
call    0 returned 27
        1:   40-block  1
call    1 returned 1
        -:   41:
        -:   42:};
        -:   43:
        -:   44:
        -:   45:#endif //QT_VALIDATOR_H
