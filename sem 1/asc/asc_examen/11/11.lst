     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, fopen, fclose, fprintf, scanf
     5                                  import exit msvcrt.dll
     6                                  import fopen msvcrt.dll
     7                                  import fclose msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  
    11                                  
    12                                  segment data use32 class = data
    13 00000000 0000<rept>                  file_name times 20 db 0, 0
    14 00000028 772B00                      file_mode db "w+", 0
    15 0000002B FFFFFFFF                    file_descr dd -1
    16 0000002F 25732000                    file_w_format db "%s ", 0
    17                                      
    18 00000033 0000<rept>                  cuv times 20 db 0, 0
    19 0000005B 0000<rept>                  ans times 200 db 0, 0
    20                                      
    21 000001EB 257300                      r_format db "%s", 0
    22 000001EE 00000000                    counter dd 0
    23                                      
    24                                      
    25                                  segment code use32 class = code
    26                                      start:
    27 00000000 BE00000000                      mov esi, 0
    28                                      
    29                                          rep_1:
    30 00000005 68[33000000]                        push dword cuv
    31 0000000A 68[EB010000]                        push dword r_format
    32 0000000F FF15[00000000]                      call [scanf]
    33 00000015 83C408                              add esp, 4 * 2
    34                                              
    35 00000018 803D[33000000]2E                    cmp byte [cuv], '.'
    36 0000001F 7464                                je exit_rep_1
    37                                              
    38 00000021 833D[EE010000]00                    cmp dword [counter], 0
    39 00000028 7529                                jne not_file
    40                                              
    41 0000002A 68[28000000]                        push dword file_mode
    42 0000002F 68[33000000]                        push dword cuv
    43 00000034 FF15[00000000]                      call [fopen]
    44 0000003A 83C408                              add esp, 4 * 2
    45                                              
    46 0000003D A3[2B000000]                        mov [file_descr], eax
    47 00000042 83F800                              cmp eax, 0
    48 00000045 7466                                je final
    49                                              
    50 00000047 C705[EE010000]0100-                 mov dword [counter], 1
    50 0000004F 0000               
    51 00000051 EB30                                jmp skip
    52                                              
    53                                              not_file:
    54 00000053 BF00000000                          mov edi, 0
    55                                              
    56                                              rep_2:
    57 00000058 8A87[33000000]                          mov al, [cuv + edi]
    58 0000005E 3C00                                    cmp al, 0
    59 00000060 7403                                    je exit_rep_2
    60                                                  
    61 00000062 47                                      inc edi
    62                                                  
    63 00000063 EBF3                                    jmp rep_2
    64                                              
    65                                              exit_rep_2:
    66 00000065 4F                                  dec edi
    67                                              
    68                                              rep_3:
    69 00000066 83FFFF                                  cmp edi, -1
    70 00000069 7410                                    je exit_rep_3
    71                                                  
    72 0000006B 8A87[33000000]                          mov al, [cuv + edi]
    73 00000071 8886[5B000000]                          mov [ans + esi], al
    74 00000077 46                                      inc esi
    75                                              
    76 00000078 4F                                      dec edi
    77 00000079 EBEB                                    jmp rep_3
    78                                                  
    79                                              exit_rep_3:
    80 0000007B C686[5B000000]20                    mov [ans + esi], byte ' '
    81 00000082 46                                  inc esi
    82                                              
    83                                              skip:
    84 00000083 EB80                                jmp rep_1
    85                                              
    86                                          exit_rep_1:
    87 00000085 68[5B000000]                    push dword ans
    88 0000008A 68[2F000000]                    push dword file_w_format
    89 0000008F FF35[2B000000]                  push dword [file_descr]
    90 00000095 FF15[00000000]                  call [fprintf]
    91 0000009B 83C40C                          add esp, 4 * 3
    92                                          
    93 0000009E FF35[2B000000]                  push dword [file_descr]
    94 000000A4 FF15[00000000]                  call [fclose]
    95 000000AA 83C404                          add esp, 4 * 1
    96                                          
    97                                          final:
    98 000000AD 6A00                            push dword 0
    99 000000AF FF15[00000000]                  call [exit]
