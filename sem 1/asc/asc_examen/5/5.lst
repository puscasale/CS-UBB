     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  
    10                                  segment data use32 class = data
    11 00000000 0000<rept>                  text times 100 db 0, 0
    12 000000C8 0000<rept>                  lower times 100 db 0, 0
    13 00000190 0000<rept>                  upper times 100 db 0, 0
    14                                      
    15 00000258 257300                      r_format db "%s", 0
    16 0000025B 4C6F7765723A202573-         w_format db "Lower: %s %cUpper: %s", 0
    16 00000264 20256355707065723A-
    16 0000026D 20257300           
    17                                      
    18                                  
    19                                  segment code use32 class = code
    20                                      start:
    21 00000000 68[00000000]                    push dword text
    22 00000005 68[58020000]                    push dword r_format
    23 0000000A FF15[00000000]                  call [scanf]
    24 00000010 83C408                          add esp, 4 * 2
    25                                          
    26 00000013 BE00000000                      mov esi, 0
    27 00000018 BF00000000                      mov edi, 0
    28 0000001D BB00000000                      mov ebx, 0
    29                                          
    30                                          rep_1:
    31 00000022 8A86[00000000]                      mov al, [text + esi]
    32 00000028 3C00                                cmp al, 0
    33 0000002A 7417                                je exit_rep_1
    34                                              
    35 0000002C 3C61                                cmp al, 'a'
    36 0000002E 7209                                jb is_upper
    37                                              
    38 00000030 8887[C8000000]                      mov [lower + edi], al
    39 00000036 47                                  inc edi
    40 00000037 EB07                                jmp skipper
    41                                              
    42                                              is_upper:
    43 00000039 8883[90010000]                      mov [upper + ebx], al
    44 0000003F 43                                  inc ebx
    45                                          
    46                                              skipper:
    47 00000040 46                                  inc esi
    48 00000041 EBDF                                jmp rep_1
    49                                           
    50                                          exit_rep_1:
    51 00000043 68[90010000]                    push dword upper
    52 00000048 6A0A                            push dword 10
    53 0000004A 68[C8000000]                    push dword lower
    54 0000004F 68[5B020000]                    push dword w_format
    55 00000054 FF15[00000000]                  call [printf]
    56 0000005A 83C410                          add esp, 4 * 4
    57                                          
    58 0000005D 6A00                            push dword 0
    59 0000005F FF15[00000000]                  call [exit]
