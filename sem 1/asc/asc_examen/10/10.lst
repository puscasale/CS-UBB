     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, fopen, fclose, fprintf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fclose msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  
    11                                  
    12                                  segment data use32 class = data
    13 00000000 6F75747075742E7478-         file_name db "output.txt", 0
    13 00000009 7400               
    14 0000000B 7700                        file_mode db "w", 0
    15 0000000D FFFFFFFF                    file_descr dd -1
    16 00000011 25642000                    file_w_format db "%d ", 0
    17                                      
    18 00000015 256400                      r_format db "%d", 0
    19                                      
    20 00000018 00000000                    m dd 0
    21 0000001C 00000000                    n dd 0
    22 00000020 00000000                    number dd 0
    23 00000024 00000000                    counter dd 0
    24 00000028 0A000000                    ten dd 10
    25                                  
    26                                  segment code use32 class = code
    27                                      start:
    28 00000000 68[0B000000]                    push dword file_mode
    29 00000005 68[00000000]                    push dword file_name
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4 * 2
    32                                          
    33 00000013 A3[0D000000]                    mov [file_descr], eax
    34 00000018 83F800                          cmp eax, 0
    35 0000001B 0F84B4000000                    je final
    36                                          
    37 00000021 68[18000000]                    push dword m
    38 00000026 68[15000000]                    push dword r_format
    39 0000002B FF15[00000000]                  call [scanf]
    40 00000031 83C408                          add esp, 4 * 2
    41                                          
    42 00000034 68[1C000000]                    push dword n
    43 00000039 68[15000000]                    push dword r_format
    44 0000003E FF15[00000000]                  call [scanf]
    45 00000044 83C408                          add esp, 4 * 2
    46                                          
    47                                          rep_1:
    48 00000047 833D[18000000]00                    cmp dword [m], 0
    49 0000004E 7476                                je exit_rep_1
    50                                          
    51 00000050 68[20000000]                        push dword number
    52 00000055 68[15000000]                        push dword r_format
    53 0000005A FF15[00000000]                      call [scanf]
    54 00000060 83C408                              add esp, 4 * 2
    55                                              
    56 00000063 C705[24000000]0000-                 mov dword [counter], 0
    56 0000006B 0000               
    57 0000006D A1[20000000]                        mov eax, [number]
    58 00000072 BA00000000                          mov edx, 0
    59                                              
    60                                              rep_2:
    61 00000077 83F800                                  cmp eax, 0
    62 0000007A 741B                                    je exit_rep_2
    63                                                  
    64 0000007C BA00000000                              mov edx, 0
    65 00000081 F735[28000000]                          div dword [ten]
    66 00000087 F7C201000000                            test edx, 01h
    67 0000008D 7506                                    jnz not_par
    68                                                  
    69 0000008F FF05[24000000]                          inc dword [counter]
    70                                                  
    71                                                  not_par:
    72 00000095 EBE0                                    jmp rep_2
    73                                                  
    74                                              exit_rep_2:
    75 00000097 A1[24000000]                        mov eax, [counter]
    76 0000009C 3B05[1C000000]                      cmp eax, [n]
    77 000000A2 721A                                jb not_min_par_digits
    78                                              
    79 000000A4 FF35[20000000]                      push dword [number]
    80 000000AA 68[11000000]                        push dword file_w_format
    81 000000AF FF35[0D000000]                      push dword [file_descr]
    82 000000B5 FF15[00000000]                      call [fprintf]
    83 000000BB 83C40C                              add esp, 4 * 3
    84                                              
    85                                              not_min_par_digits:
    86 000000BE FF0D[18000000]                      dec dword [m]
    87 000000C4 EB81                                jmp rep_1
    88                                             
    89                                          exit_rep_1:
    90 000000C6 FF35[0D000000]                  push dword [file_descr]
    91 000000CC FF15[00000000]                  call [fclose]
    92 000000D2 83C404                          add esp, 4 * 1
    93                                          
    94                                          final:
    95 000000D5 6A00                            push dword 0
    96 000000D7 FF15[00000000]                  call [exit]
