     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, fopen, fclose, fscanf, printf
     5                                  import exit msvcrt.dll 
     6                                  import fopen msvcrt.dll
     7                                  import fclose msvcrt.dll
     8                                  import fscanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  
    12                                  segment data use32 class = data
    13 00000000 696E7075742E747874-         file_name db "input.txt", 0
    13 00000009 00                 
    14 0000000A 7200                        file_mode db "r", 0
    15 0000000C FFFFFFFF                    file_descr dd -1
    16 00000010 256400                      file_r_format db "%d", 0
    17                                      
    18 00000013 256400                      w_format db "%d", 0
    19                                      
    20 00000016 00000000                    number dd 0
    21 0000001A 00000000                    sum dd 0
    22                                      
    23                                      
    24                                  segment code use32 class = code
    25                                      start:
    26 00000000 68[0A000000]                    push dword file_mode
    27 00000005 68[00000000]                    push dword file_name
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp, 4 * 2
    30                                          
    31 00000013 A3[0C000000]                    mov [file_descr], eax
    32 00000018 83F800                          cmp eax, 0
    33 0000001B 744E                            je final
    34                                          
    35                                          rep_1:
    36 0000001D 68[16000000]                        push dword number
    37 00000022 68[10000000]                        push dword file_r_format
    38 00000027 FF35[0C000000]                      push dword [file_descr]
    39 0000002D FF15[00000000]                      call [fscanf]
    40 00000033 83C40C                              add esp, 4 * 3
    41                                              
    42 00000036 83F801                              cmp eax, 1
    43 00000039 750D                                jne exit_rep_1
    44                                              
    45 0000003B A1[16000000]                        mov eax, [number]
    46 00000040 0105[1A000000]                      add dword [sum], eax
    47                                              
    48 00000046 EBD5                                jmp rep_1
    49                                          
    50                                          exit_rep_1:
    51 00000048 FF35[1A000000]                  push dword [sum]
    52 0000004E 68[13000000]                    push dword w_format
    53 00000053 FF15[00000000]                  call [printf]
    54 00000059 83C408                          add esp, 4 * 2
    55                                          
    56 0000005C FF35[0C000000]                  push dword [file_descr]
    57 00000062 FF15[00000000]                  call [fclose]
    58 00000068 83C404                          add esp, 4 * 1
    59                                          
    60                                          final:
    61 0000006B 6A00                            push dword 0
    62 0000006D FF15[00000000]                  call [exit]
