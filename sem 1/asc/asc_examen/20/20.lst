     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  
    10                                  segment data use32 class = data
    11 00000000 256400                      r_format_dec db "%d", 0
    12 00000003 257300                      r_format_str db "%s", 0
    13 00000006 257300                      w_format db "%s", 0
    14                                      
    15 00000009 0000<rept>                  cuv times 20 db 0, 0
    16 00000031 0000<rept>                  ans times 60 db 0, 0
    17 000000A9 00000000                    number dd 0
    18 000000AD 6165696F754145494F-         voc db "aeiouAEIOU", 0
    18 000000B6 5500               
    19 000000B8 00000000                    is_voc dd 0
    20                                      
    21                                  
    22                                  segment code use32 class = code
    23                                      start:
    24 00000000 68[09000000]                    push dword cuv
    25 00000005 68[03000000]                    push dword r_format_str
    26 0000000A FF15[00000000]                  call [scanf]
    27 00000010 83C408                          add esp, 4 * 2
    28                                          
    29 00000013 68[A9000000]                    push dword number
    30 00000018 68[00000000]                    push dword r_format_dec
    31 0000001D FF15[00000000]                  call [scanf]
    32 00000023 83C408                          add esp, 4 * 2
    33                                          
    34 00000026 F705[A9000000]0100-             test dword [number], 01h
    34 0000002E 0000               
    35 00000030 746F                            jz par
    36                                          
    37 00000032 BE00000000                      mov esi, 0
    38 00000037 BF00000000                      mov edi, 0
    39                                          
    40                                          rep_1:
    41 0000003C C705[B8000000]0000-                 mov dword [is_voc], 0
    41 00000044 0000               
    42 00000046 8A86[09000000]                      mov al, [cuv + esi]
    43 0000004C 3C00                                cmp al, 0
    44 0000004E 744F                                je exit_rep_1
    45                                              
    46 00000050 BB00000000                          mov ebx, 0
    47                                              
    48                                              rep_2:
    49 00000055 8A8B[AD000000]                          mov cl, [voc + ebx]
    50 0000005B 80F900                                  cmp cl, 0
    51 0000005E 7411                                    je exit_rep_2
    52                                                  
    53 00000060 38C8                                    cmp al, cl
    54 00000062 750A                                    jne not_eq
    55                                              
    56 00000064 C705[B8000000]0100-                     mov dword [is_voc], 1
    56 0000006C 0000               
    57                                              
    58                                                  not_eq:
    59 0000006E 43                                      inc ebx
    60 0000006F EBE4                                    jmp rep_2
    61                                          
    62                                              exit_rep_2:
    63 00000071 F705[B8000000]0100-                 test dword [is_voc], 01h
    63 00000079 0000               
    64 0000007B 7418                                jz not_voc
    65                                              
    66 0000007D 8887[31000000]                      mov [ans + edi], al
    67 00000083 47                                  inc edi
    68 00000084 C687[31000000]70                    mov [ans + edi], byte 'p'
    69 0000008B 47                                  inc edi
    70 0000008C 8887[31000000]                      mov [ans + edi], al
    71 00000092 47                                  inc edi
    72 00000093 EB07                                jmp jump_over
    73                                              
    74                                              not_voc:
    75 00000095 8887[31000000]                      mov [ans + edi], al
    76 0000009B 47                                  inc edi
    77                                              
    78                                              jump_over:
    79 0000009C 46                                  inc esi
    80 0000009D EB9D                                jmp rep_1
    81                                       
    82                                          exit_rep_1:
    83 0000009F EB1A                            jmp skip
    84                                          
    85                                          par:
    86 000000A1 BE00000000                      mov esi, 0
    87                                          
    88                                          rep_3:
    89 000000A6 8A86[09000000]                      mov al, [cuv + esi]
    90 000000AC 3C00                                cmp al, 0
    91 000000AE 740B                                je exit_rep_3
    92                                              
    93 000000B0 0414                                add al, 20
    94 000000B2 8886[31000000]                      mov [ans + esi], al
    95                                              
    96 000000B8 46                                  inc esi
    97 000000B9 EBEB                                jmp rep_3
    98                                              
    99                                          exit_rep_3:
   100                                          skip:
   101 000000BB 68[31000000]                    push dword ans
   102 000000C0 68[06000000]                    push dword w_format
   103 000000C5 FF15[00000000]                  call [printf]
   104 000000CB 83C408                          add esp, 4 * 2
   105                                      
   106 000000CE 6A00                            push dword 0
   107 000000D0 FF15[00000000]                  call [exit]
