     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 A6                          a db 10100110b
    11 00000001 0B                          b db 00001011b
    12 00000002 <res 00000004>              c resd 1
    13                                  ;Se dau octetii A si B. Sa se obtina dublucuvantul C
    14                                  ;bitii 16-31 ai lui C sunt 1
    15                                  ;bitii 0-3 ai lui C coincid cu bitii 3-6 ai lui B
    16                                  ;bitii 4-7 ai lui C au valoarea 0
    17                                  ;bitii 8-10 ai lui C au valoarea 110
    18                                  ;bitii 11-15 ai lui C coincid cu bitii 0-4 ai lui A
    19                                   segment code use32 class=code
    20                                  start:
    21                                      
    22                                      ;bitii 16-31 ai lui C sunt 1
    23 00000000 66BB0000                    mov bx, 0
    24 00000004 6683CBFF                    or bx, 1111111111111111b; bx = 1111 1111 1111 1111b = FFFFh
    25                                      
    26                                      ;bitii 0-3 ai lui C coincid cu bitii 3-6 ai lui B
    27 00000008 66B80000                    mov ax, 0
    28 0000000C 8A15[01000000]              mov dl, [b]
    29 00000012 B600                        mov dh, 0; dx = b
    30 00000014 6683E278                    and dx, 0000000001111000b; dx = 0000 0000 0000 1000b = 0008h
    31 00000018 66C1EA03                    shr dx,3; dx = 0000 0000 0000 0001b = 0001h
    32 0000001C 6609D0                      or ax, dx; ax = 0000 0000 0000 0001b = 0001h
    33                                      
    34                                      ;bitii 4-7 ai lui C au valoarea 0
    35 0000001F 66250FFF                    and ax, 1111111100001111b; ax = 0000 0000 0000 0001b = 0001h
    36                                      
    37                                      ;bitii 8-10 ai lui C au valoarea 110
    38 00000023 660D0006                    or ax, 0000011000000000b ; ax = 0000 0110 0000 0001b = 0601h
    39                                      
    40                                      ;bitii 11-15 ai lui C coincid cu bitii 0-4 ai lui A
    41 00000027 8A0D[00000000]              mov cl, [a]
    42 0000002D B500                        mov ch, 0; cx = a
    43 0000002F 6683E11F                    and cx, 0000000000011111b; cx = 0000 0000 0000 0110b= 0006h
    44 00000033 66C1E10B                    shl cx,11 ; cx = 0011 0000 0000 0000b = 3000h 
    45 00000037 6609C8                      or ax, cx; ax = 0011 0110 0000 0001b = 3601h
    46 0000003A 66A3[02000000]              mov [c], ax
    47 00000040 66891D[06000000]            mov [c+4], bx; c = 1111 1111 1111 1111 0011 0000 0000 0001b = FFFF3601h
    48                                      
    49 00000047 6A00                    push dword 0
    50 00000049 FF15[00000000]          call [exit]
